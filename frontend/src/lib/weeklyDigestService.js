import AIInsightsService from './aiInsightsService';
import { emailService } from './emailService';

/**
 * Weekly Digest Service
 * Sends AI-generated weekly insights to church leadership
 */
export class WeeklyDigestService {
  
  /**
   * Generate and send weekly digest email
   */
  static async sendWeeklyDigest(organizationId, recipientEmails = []) {
    try {
      // Get AI-generated weekly digest
      const digestResult = await AIInsightsService.getWeeklyDigest(organizationId);
      
      if (!digestResult.content || digestResult.error) {
        console.error('Failed to generate weekly digest:', digestResult.error);
        return {
          success: false,
          error: 'Failed to generate weekly digest'
        };
      }

      // Prepare email content
      const emailContent = this.formatDigestEmail(digestResult.content);
      
      // Send email to each recipient
      const emailPromises = recipientEmails.map(email => 
        emailService.sendEmail({
          to: email,
          subject: 'Weekly Church Insights - AI Digest',
          html: emailContent,
          text: digestResult.content
        })
      );

      const results = await Promise.allSettled(emailPromises);
      
      const successful = results.filter(r => r.status === 'fulfilled').length;
      const failed = results.filter(r => r.status === 'rejected').length;

      return {
        success: successful > 0,
        sent: successful,
        failed,
        total: recipientEmails.length,
        content: digestResult.content
      };

    } catch (error) {
      console.error('Error sending weekly digest:', error);
      return {
        success: false,
        error: error.message
      };
    }
  }

  /**
   * Format digest email with HTML
   */
  static formatDigestEmail(content) {
    return `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Weekly Church Insights</title>
        <style>
          body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
          }
          .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 30px;
            border-radius: 10px;
            text-align: center;
            margin-bottom: 30px;
          }
          .content {
            background: #f8f9fa;
            padding: 30px;
            border-radius: 10px;
            border-left: 4px solid #667eea;
          }
          .footer {
            text-align: center;
            margin-top: 30px;
            padding: 20px;
            color: #666;
            font-size: 14px;
          }
          .highlight {
            background: #e3f2fd;
            padding: 15px;
            border-radius: 8px;
            margin: 20px 0;
            border-left: 4px solid #2196f3;
          }
          .cost-info {
            background: #f3e5f5;
            padding: 15px;
            border-radius: 8px;
            margin: 20px 0;
            border-left: 4px solid #9c27b0;
            font-size: 14px;
          }
        </style>
      </head>
      <body>
        <div class="header">
          <h1>ðŸ¤– AI Ministry Insights</h1>
          <p>Weekly Digest - Powered by Intelligent Analysis</p>
        </div>
        
        <div class="content">
          <div class="highlight">
            <h2>ðŸ“Š This Week's Insights</h2>
            <div style="white-space: pre-line;">${content}</div>
          </div>
          
          <div class="cost-info">
            <strong>ðŸ’¡ Cost-Efficient AI:</strong> This digest was generated using smart SQL queries and lightweight AI APIs. 
            Estimated cost: ~$0.10 per digest.
          </div>
        </div>
        
        <div class="footer">
          <p>Generated by Deacon Church Management System</p>
          <p>AI-powered insights for better ministry decisions</p>
        </div>
      </body>
      </html>
    `;
  }

  /**
   * Schedule weekly digest (for future implementation)
   */
  static async scheduleWeeklyDigest(organizationId, schedule = 'weekly') {
    // This would integrate with a task scheduler like cron
    // For now, this is a placeholder for future implementation
    console.log(`Scheduling weekly digest for organization ${organizationId}`);
    
    return {
      success: true,
      message: 'Weekly digest scheduled',
      schedule
    };
  }

  /**
   * Get digest statistics
   */
  static async getDigestStats(organizationId) {
    try {
      const insights = await AIInsightsService.getDashboardInsights(organizationId);
      
      return {
        atRiskMembers: insights.insights?.atRisk?.data?.length || 0,
        volunteerBurnout: insights.insights?.volunteers?.data?.length || 0,
        monthlyGiving: insights.insights?.giving?.data?.monthlyGiving || 0,
        visitorRetention: insights.insights?.visitors?.data?.retentionRate || 0,
        lastUpdated: insights.timestamp
      };
    } catch (error) {
      console.error('Error getting digest stats:', error);
      return {
        error: error.message
      };
    }
  }
}

export default WeeklyDigestService;